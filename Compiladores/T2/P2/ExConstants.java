/* Generated By:JJTree&JavaCC: Do not edit this line. ExConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ExConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MAIN = 5;
  /** RegularExpression Id. */
  int APARENTESES = 6;
  /** RegularExpression Id. */
  int FPARENTESES = 7;
  /** RegularExpression Id. */
  int ACHAVES = 8;
  /** RegularExpression Id. */
  int FCHAVES = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int FLOAT = 11;
  /** RegularExpression Id. */
  int CHAR = 12;
  /** RegularExpression Id. */
  int VOID = 13;
  /** RegularExpression Id. */
  int PVIRGULA = 14;
  /** RegularExpression Id. */
  int SOMA = 15;
  /** RegularExpression Id. */
  int SUBTRACAO = 16;
  /** RegularExpression Id. */
  int DIVISAO = 17;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 18;
  /** RegularExpression Id. */
  int ATRIBUICAO = 19;
  /** RegularExpression Id. */
  int PRINT = 20;
  /** RegularExpression Id. */
  int FOR = 21;
  /** RegularExpression Id. */
  int WHILE = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int RETURN = 25;
  /** RegularExpression Id. */
  int IGUALDADE = 26;
  /** RegularExpression Id. */
  int DIFERENTE = 27;
  /** RegularExpression Id. */
  int MAIOR = 28;
  /** RegularExpression Id. */
  int MENOR = 29;
  /** RegularExpression Id. */
  int MAIORIGUAL = 30;
  /** RegularExpression Id. */
  int MENORIGUAL = 31;
  /** RegularExpression Id. */
  int VIRGULA = 32;
  /** RegularExpression Id. */
  int ATRIBUICAOSOMA = 33;
  /** RegularExpression Id. */
  int ATRIBUICAOSUBTRACAO = 34;
  /** RegularExpression Id. */
  int INC = 35;
  /** RegularExpression Id. */
  int DEC = 36;
  /** RegularExpression Id. */
  int ID = 37;
  /** RegularExpression Id. */
  int NUM = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"main\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"int\"",
    "\"float\"",
    "\"char\"",
    "\"void\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"=\"",
    "\"print\"",
    "\"for\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"return\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\",\"",
    "\"+=\"",
    "\"-=\"",
    "\"++\"",
    "\"--\"",
    "<ID>",
    "<NUM>",
  };

}
