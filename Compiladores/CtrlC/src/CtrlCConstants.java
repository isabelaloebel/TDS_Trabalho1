/* Generated By:JavaCC: Do not edit this line. CtrlCConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CtrlCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SOMA = 6;
  /** RegularExpression Id. */
  int SUB = 7;
  /** RegularExpression Id. */
  int MULT = 8;
  /** RegularExpression Id. */
  int DIV = 9;
  /** RegularExpression Id. */
  int MOD = 10;
  /** RegularExpression Id. */
  int PARENTHESESO = 11;
  /** RegularExpression Id. */
  int PARENTHESESC = 12;
  /** RegularExpression Id. */
  int CHAVESA = 13;
  /** RegularExpression Id. */
  int CHAVESF = 14;
  /** RegularExpression Id. */
  int PONTOVIR = 15;
  /** RegularExpression Id. */
  int ATRIBUICAO = 16;
  /** RegularExpression Id. */
  int AND = 17;
  /** RegularExpression Id. */
  int OR = 18;
  /** RegularExpression Id. */
  int EQUAL = 19;
  /** RegularExpression Id. */
  int DIFFERENT = 20;
  /** RegularExpression Id. */
  int MAIOR = 21;
  /** RegularExpression Id. */
  int MENOR = 22;
  /** RegularExpression Id. */
  int MAIORIGUAL = 23;
  /** RegularExpression Id. */
  int MENORIGUAL = 24;
  /** RegularExpression Id. */
  int ATRIBUISOMA = 25;
  /** RegularExpression Id. */
  int ATRIBUISUB = 26;
  /** RegularExpression Id. */
  int INC = 27;
  /** RegularExpression Id. */
  int DEC = 28;
  /** RegularExpression Id. */
  int MAIN = 29;
  /** RegularExpression Id. */
  int IF = 30;
  /** RegularExpression Id. */
  int ELSE = 31;
  /** RegularExpression Id. */
  int INT = 32;
  /** RegularExpression Id. */
  int FLOAT = 33;
  /** RegularExpression Id. */
  int DOUBLE = 34;
  /** RegularExpression Id. */
  int CHAR = 35;
  /** RegularExpression Id. */
  int PRINT = 36;
  /** RegularExpression Id. */
  int FOR = 37;
  /** RegularExpression Id. */
  int WHILE = 38;
  /** RegularExpression Id. */
  int VOID = 39;
  /** RegularExpression Id. */
  int RETURN = 40;
  /** RegularExpression Id. */
  int NUM = 41;
  /** RegularExpression Id. */
  int ID = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\\n\"",
    "\"\\r\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"+=\"",
    "\"-=\"",
    "\"++\"",
    "\"--\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"int\"",
    "\"float\"",
    "\"double\"",
    "\"char\"",
    "\"print\"",
    "\"for\"",
    "\"while\"",
    "\"void\"",
    "\"return\"",
    "<NUM>",
    "<ID>",
  };

}
